<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;
use Illuminate\Support\Str;

class StorageInvoiceRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */
    public function authorize()
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array
     */
    public function rules()
    {
        $rules = [
            'code' => 'nullable|string|unique:storage_invoices,code',
            'supplier_invoice_code' => 'required|string|unique:storage_invoices,supplier_invoice_code',
            'supplier_id' => 'required|numeric|exists:suppliers,id',
            'date' => 'required|date|date_format:Y-m-d',
            'total' => 'required',
            'received' => 'required|numeric',
            'created_by' => 'nullable|numeric|exists:admins,id',
            'products' => 'required|array',
            'notes' => 'nullable|string',
        ];

        if ($this->method() == 'PUT') {
            $rules = [
                'code' => 'nullable|string|unique:storage_invoices,code,'.$this->storage_invoice->id ,
                'supplier_invoice_code' => 'required|string|unique:storage_invoices,supplier_invoice_code,'.$this->storage_invoice->id ,
                'supplier_id' => 'required|numeric|exists:suppliers,id',
                'date' => 'required|date|date_format:Y-m-d',
                'total' => 'required',
                'received' => 'nullable|numeric',
                'created_by' => 'nullable|numeric|exists:admins,id',
                'products' => 'required|array',
                'products.*.unit_id' => 'required|numeric|exists:units,id',
                'notes' => 'nullable|string',
            ];
        }
        return $rules;
    }

    public function validated()
    {
        $data = parent::validated(); // TODO: Change the autogenerated stub
        $data['created_by'] = auth()->id();
        $data['code'] = Str::random(8);
        $data['type'] = 'in';

        return $data;
    }

}
